name: Build and Compile Nginx with Module

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-nginx:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Install dependencies
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential libpcre3 libpcre3-dev zlib1g zlib1g-dev libssl-dev git

      # Download Nginx source code
      - name: Download Nginx source
        run: |
          pwd 
          ls -lhat 
          cd ..
          git clone https://github.com/nginx/nginx.git
      
      # download protable ssl
      - name: Download protable ssl
        run: |
          pwd 
          ls -lhat 
          cd ..
          git clone https://github.com/libressl/portable.git

      # Configure and compile Nginx with the dynamic module
      - name: Configure and build Nginx with module
        run: |
          pwd 
          ls -lhat 
          cd ../nginx
          auto/configure --prefix=/usr/local/nginx --with-compat --with-http_v2_module \
          --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module \
          --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module \
          --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module \
          --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module \
          --with-http_v3_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module \
          --with-stream_ssl_preread_module --with-cc-opt='-O2 -flto=auto -ffat-lto-objects -fexceptions -g -grecord-gcc-switches -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -fstack-protector-strong -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -march=x86-64-v2 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -fPIC' \
          --with-ld-opt='-Wl,-z,relro -Wl,-z,now -pie' \
          --with-openssl=../portable \
          --add-module=../brutal-nginx
          make
          sudo make install

      # Verify the Nginx installation
      - name: Verify Nginx version
        run: /usr/local/nginx/sbin/nginx -v

      # Package the build (optional)
      - name: Package Nginx binary
        run: |
          cd /usr/local/nginx
          sudo tar -czvf nginx-built.tar.gz sbin/ conf/ html/ logs/
          sudo mv nginx-built.tar.gz $GITHUB_WORKSPACE
          cd $GITHUB_WORKSPACE
          sudo chown runner:runner nginx-built.tar.gz  # Change ownership to runner
          ls -lhat $GITHUB_WORKSPACE
          pwd

      # Upload the package as an artifact (optional)
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: nginx-built
          path: nginx-built.tar.gz
